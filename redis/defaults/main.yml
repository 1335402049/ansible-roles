---
# 端口
port: 6379

# 绑定ip，0,0,0,0表示允许所有机器访问
bind: 0.0.0.0

# 客户端连接超时时间，单位秒
timeout: 3

# 日志记录等级 debug、verbose、notice、warning
loglevel: "notice"

# 日志路径
logfile: /var/log/redis/redis-server.log

# 是否开启保护模式
protected_mode: "no"

# 数据库总数量,索引0-15
databases: 16

# 设置快照名称
dbfilename: dump.rdb

# 设置rdb、aof文件存储路径
dir: /usr/local/redis

# RDB持久化策略
save:
  - 900 1
  - 300 10
  - 60 10000

# 是否对存储在硬盘的RDB快照进行压缩。如果不想消耗CPU，可以关闭此配置，但是快照文件会越来越大
rdbcompression: "yes"

# 是否在redis存储快照后，进行数据校验，但是会消耗大约10%的性能。
rdbchecksum: "no"

# 设置密码验证，当客户端连接redis-server时，需要进行密码验证
requirepass: 123456

# 如果主服务器设置了requirepass,则从服务器必须配置masterauth进行密码校验
masterauth: 123456

# 设置redis-server运行客户端的最大连接数
maxclients: 10000

# 设置redis可以使用的内存量，当超过内存上限，redis将会根据maxmemory-policy规则移除内部数据
maxmemory: 0

# redis支持volatile-lru、allkeys-lru、volatile-random、allkeys-random、volatile-ttl、noeviction六种数据淘汰策略
maxmemory_policy: noeviction

# 是否开启aof持久化
appendonly: "yes"

# 设置aof文件名称
appendfilename: "appendonly.aof"

# 一次fsync()调用，操作系统会将缓存指令写入硬盘。redis支持三种模式，no：不调用，让操作系统自行决定sync的时间，redis性能更快；always：每次写请求后都会调用，这种情况redis会相对较慢，但数据最安全；everysec：每秒钟调用一次
appendfsync: everysec

# 是否开启cluster集群
cluster_enabled: "no"

# 配置集群配置文件
cluster_config_file: nodes.conf

# 集群节点超时设置
cluster_node_timeout: 15000
